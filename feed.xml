<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2022-02-01T19:36:28+08:00</updated><id>/feed.xml</id><title type="html">Espresso Withoutmilk</title><subtitle>爱喝咖啡,乳糖不耐受</subtitle><author><name>Ryan</name></author><entry><title type="html">Sliding Window 系列 笔记3</title><link href="/algorithm/sliding-window-2/" rel="alternate" type="text/html" title="Sliding Window 系列 笔记3" /><published>2022-02-01T00:00:00+08:00</published><updated>2022-02-01T00:00:00+08:00</updated><id>/algorithm/sliding-window-2</id><content type="html" xml:base="/algorithm/sliding-window-2/"><![CDATA[<h3 id="题目">题目</h3>

<p>给出一个非负数组和一个非负数s,找出数组中总和大于或者等于s的最小连续子乡长度。示例如下，</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>例子1
输入: [2, 1, 5, 2, 3, 2], s=7 
输出: 2
解释: 最小的子项大于或者等于7。[5,2]的长度是2。
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>例子2
输入: [2, 1, 5, 2, 8], s=7 
输出: 1
解释: 最小的子项大于或者等于7。[8]的长度是1。
</code></pre></div></div>
<h3 id="思路">思路</h3>
<p>根据之前的Sliding Window 解法，目前需要考虑的是连续子项的个数变化，需要把子项不断相加，直到总和大于或者等于s，那么记录这些子项的个数，同时把第一个子项去除，继续加入新的子项。见代码</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>class MinSizeSubArraySum {
    public static int findMinSubArray(int[] arr, int s){
        int windowSum = 0, minLength = Integer.MAX_VALUE;
        int left = 0;
        for(int right = 0; right&lt;= arr.length, right++){
            windowSum += arr[right];
            if(windowSum &gt;= s){
              minLength = Math.min(minLength, right - left + 1);
              windowSum -= arr[left];
              left++;
            }
            
        }
        return minLength == Integer.MAX_VALUE ? 0 : minLength;
    }
}

</code></pre></div></div>
<p>时间复杂度是O(N)， 空间复杂度是O(1)。</p>]]></content><author><name>Ryan</name></author><category term="Algorithm" /><category term="Sliding Window" /><summary type="html"><![CDATA[题目]]></summary></entry><entry><title type="html">Sliding Window 系列 笔记2</title><link href="/algorithm/sliding-window-1/" rel="alternate" type="text/html" title="Sliding Window 系列 笔记2" /><published>2022-01-31T00:00:00+08:00</published><updated>2022-01-31T00:00:00+08:00</updated><id>/algorithm/sliding-window-1</id><content type="html" xml:base="/algorithm/sliding-window-1/"><![CDATA[<p>紧接昨日思路，再来个递进，看题目，给出一个非负数组和一个非负数的K,找出数组中最大的连续K子项总和。示例如下，</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Input: [2, 1, 5, 1, 3, 2], k=3 
Output: 9
Explanation: Subarray with maximum sum is [5, 1, 3].
</code></pre></div></div>
<p>因为数组的缘故，可以先考虑迭代解决。代码如下</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>class MaxSumSubArrayOfSizeK {
    public static int findMaxSumSubArray(int[] arr, int k){
        int maxSum = 0, windowSum;
        for(int i = 0; i&lt;= arr.length -k, i++){
            windowSum = 0;
            for(int j = i; j &lt;i+k; j++){
                windowSum += arr[j];
            }
            maxSum = Math.max(maxSum, windowSum);
        }
        return maxSum;
    }
}
</code></pre></div></div>

<p>同昨天缘故一样，时间复杂度还是O(N * K),N是 数组长度。采用Sliding Window把 时间复杂度降下来。
思路，找出每k个子项的相同项，不同的都是在一头一尾，头尾替换就可以。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>class MaxSumSubArrayOfSizeK {
    public static int findMaxSumSubArray(int[] arr, int k){
        int maxSum = 0, windowSum = 0;
        int left = 0;
        for(int right = 0; right&lt;= arr.length, right++){
            windowSum += arr[right];
            if(right &gt;= k-1){
              maxSum = Math.math(maxSum, windowSum);
              windowSum -= arr[left];
              left++;
            }
            
        }
        return maxSum;
    }
}

</code></pre></div></div>
<p>时间复杂度是O(N)， 空间复杂度是O(1)。</p>]]></content><author><name>Ryan</name></author><category term="Algorithm" /><category term="Sliding Window" /><summary type="html"><![CDATA[紧接昨日思路，再来个递进，看题目，给出一个非负数组和一个非负数的K,找出数组中最大的连续K子项总和。示例如下，]]></summary></entry><entry><title type="html">Sliding Window 系列笔记。找出连续k个数的平均值</title><link href="/algorithm/slide-window/" rel="alternate" type="text/html" title="Sliding Window 系列笔记。找出连续k个数的平均值" /><published>2022-01-30T00:00:00+08:00</published><updated>2022-01-30T00:00:00+08:00</updated><id>/algorithm/slide-window</id><content type="html" xml:base="/algorithm/slide-window/"><![CDATA[<p>问题，给出一个数组，找出所有连续的K个子项平均值。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Array: [2, 4, 2, 6, -3, -5, 8], K = 3
</code></pre></div></div>

<p>如上数组，求解</p>

<p>第一个平均值 （2 + 4 + 2）/3 =&gt; 2.6</p>

<p>第二个平均值 （4 + 2 + 6）/3 =&gt; 4</p>

<p>第三个平均值 （2 + 6 + （-3））/3 =&gt; 1.6</p>

<p>…</p>

<p>根据以上思路，得出最简单的解法，直接迭代求出</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>class AverageOfSubarrayOfSizeK{
  public static double[] find(int[]arr, int K){
    double[] ans = new double[arr.length - k +1];
    for(int i = 0; i&lt;= arr.length -k; i++){
      double sum = 0;
      for(int j = i; j&lt;i+K; j++){
        sum += arr[j];
      }
      ans[i] = sum /K;
    }
    return ans;
  }
}
</code></pre></div></div>

<p>我们来看下时间复杂度，每次循环一个子项的时候，都要在这个子项的情况下，在持续加K个子项，所以应该是O(N*K),N是数组的子项个数。</p>

<p>这个时间复杂度我们还能够优化，我们来分析，我们在进行逐项迭代时候，例如第一个（2 + 4 + 2），第二个 （4 + 2 + 6）。这里面存在着重复的项目，4，2是这两个迭代里面出现的。所以我们可以这样处理，在进行第二个项目（4 + 2 + 6）计算时候，可以把第一个项目（2 + 4 + 2）中的第一个2移除，就是总数减去2，然后总数加上6，就能够在保留砍头去尾，达到Sliding Window 效果，直接上代码</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>class AverageOfSubarrayOfSizeK{
  public static double[] find(int[]arr, int K){
    double[] ans = new double[arr.length - k +1];
    double sum = 0;
    int left = 0;
    for(int right = 0; right&lt;= arr.length; right++){

      sum +=  arr[right];
      if(sum &gt;= K-1){
        ans[left] = sum/K;
        sum -= arr[left];
        left++;
      }
      
    }
    return ans;
  }
}
</code></pre></div></div>
<p>现在这个时间复杂度就是O(N)</p>]]></content><author><name>Ryan</name></author><category term="Algorithm" /><category term="Sliding Window" /><summary type="html"><![CDATA[问题，给出一个数组，找出所有连续的K个子项平均值。]]></summary></entry><entry><title type="html">如何在网站上增加Google analytics，手把手操作</title><link href="/google%20analytics/add-google-analist-to-github/" rel="alternate" type="text/html" title="如何在网站上增加Google analytics，手把手操作" /><published>2022-01-29T00:00:00+08:00</published><updated>2022-01-29T00:00:00+08:00</updated><id>/google%20analytics/add-google-analist-to-github</id><content type="html" xml:base="/google%20analytics/add-google-analist-to-github/"><![CDATA[<p>如何在网站上增加Google的分析，大致说下思路，在Google Analytics上创建你的账号，然后填写相关需要观察网站的信息，顺利验证后会生成一段代码，主要用于Google对网站的访问情况记录，把这段代码放在网站的head标签内即可。下面直接来手把手操作。</p>

<p>需要技能:HTML, CSS, Javascript</p>

<h3 id="步骤一创建账号">步骤一：创建账号</h3>
<p>首先去到网站创建账号，创建账号码，需要填写几个tab上的信息</p>

<p><img src="https://s3.bmp.ovh/imgs/2022/01/2ce13d293c5cae86.png" alt="" />
基本信息</p>

<p><img src="https://s3.bmp.ovh/imgs/2022/01/fd101b86a66d6c20.png" alt="" />
你的business信息</p>

<p><img src="https://s3.bmp.ovh/imgs/2022/01/581ca14a203eb3d3.png" alt="" />
网站的话选择web</p>

<h3 id="步骤二获取代码">步骤二：获取代码</h3>
<p>成功后填入网站的相关信息，名称以及URL。验证顺利后就会生成一段代码，如图
<img src="https://s3.bmp.ovh/imgs/2022/01/28424e138d8d1b13.png" alt="" /></p>

<p>获取代码</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> &lt;script async src="https://www.googletagmanager.com/gtag/js?id=UA-XXXXXXXXX-X"&gt;&lt;/script&gt;
&lt;script&gt;
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-XXXXXXXXX-X');
&lt;/script&gt;
</code></pre></div></div>

<h3 id="步骤三加入代码">步骤三：加入代码</h3>
<p>根据步骤三生成的代码，找到网站的首页head标签加入代码。建议这个头部html写成模版，便于每个页面利用。</p>

<p>把代码复制好后就完成了，完成效果图如图：</p>

<p><img src="https://s3.bmp.ovh/imgs/2022/01/71386d7df9db8eb9.png" alt="" /></p>

<h3 id="最后">最后</h3>
<p>非常简单的一个内容，做个记录分享。</p>]]></content><author><name>Ryan</name></author><category term="google analytics" /><category term="website" /><summary type="html"><![CDATA[如何在网站上增加Google的分析，大致说下思路，在Google Analytics上创建你的账号，然后填写相关需要观察网站的信息，顺利验证后会生成一段代码，主要用于Google对网站的访问情况记录，把这段代码放在网站的head标签内即可。下面直接来手把手操作。]]></summary></entry><entry><title type="html">快速处理csv</title><link href="/ruby/csv-gem/" rel="alternate" type="text/html" title="快速处理csv" /><published>2022-01-27T00:00:00+08:00</published><updated>2022-01-27T00:00:00+08:00</updated><id>/ruby/csv-gem</id><content type="html" xml:base="/ruby/csv-gem/"><![CDATA[<p>今天看到个文章，是说处理csv的。csv虽说挺方便，可以简单管理关系型数据，不需要买个office365来处理。笔者说处理csv文件是个头痛的问题，<a href="https://ruby-doc.org/stdlib-2.6.1/libdoc/csv/rdoc/CSV.html">链接附上处理csv的代码</a>，但是如果出来的行数足够大，那也是挺恐怖。</p>

<p>图1</p>

<p><img src="https://miro.medium.com/max/930/1*ZBV_ahG8wqpVI5vpDNePNQ.png" alt="" /></p>

<p>使用<a href="https://github.com/tilo/smarter_csv">SmarterCSV</a>。简单对比。</p>

<p>图2</p>

<p><img src="https://miro.medium.com/max/962/1*1rjo1rJc8IdXywJISSytsg.png" alt="" /></p>

<h3 id="总结">总结</h3>
<p>关于SmarterCSV还没得细看，看起来不错，做个记录。联想起之前项目也有生成csv过程，但是直接扔进数据库比较多，而且还是可以迭代处理，感觉不需要单个列 写出来。</p>]]></content><author><name>Ryan</name></author><category term="Ruby" /><summary type="html"><![CDATA[今天看到个文章，是说处理csv的。csv虽说挺方便，可以简单管理关系型数据，不需要买个office365来处理。笔者说处理csv文件是个头痛的问题，链接附上处理csv的代码，但是如果出来的行数足够大，那也是挺恐怖。]]></summary></entry><entry><title type="html">翘起1000万美元的高校业务</title><link href="/startup/high-school/" rel="alternate" type="text/html" title="翘起1000万美元的高校业务" /><published>2021-12-26T00:00:00+08:00</published><updated>2021-12-26T00:00:00+08:00</updated><id>/startup/high-school</id><content type="html" xml:base="/startup/high-school/"><![CDATA[<p><img src="https://img-blog.csdnimg.cn/20210125210951735.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjU3NzQxMQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" /></p>

<p>今天分享的案例让我想起以前做的一个项目，帮一所高校图书馆做一个论文查重查引系统，当时做的时候对这方面业务不算了解，调研的业务怎么做就简单的规划了。依稀记得当时查重查引业务按条数收费，每条1，2块钱。然后将所需要的论文信息提交给图书馆，馆内的工作人员就根据提交的信息进行查询，得到结果后，根据引用处收钱。用户就进行支付即可。实在没想到美国的这家公司把论文查引业务和论文格式业务做到了极致，一个1000万美元的生意。</p>

<p>这期介绍的项目是<a href="https://easybib.com/">EasyBib.com</a>,这是一个帮助用户写论文时候查引和论文格式的网站。创始人Neal Taparia 和 Darshan读高中时候就已经开始编写网站了，高中时期他们做了个徽章和HTML教程的网站。当时他们正在为论文头疼，他们需要设置繁琐的格式。正是这个契机，本身他们也是用户，他们很清楚这个产品需要解决的问题。经过两个月的努力，他们的第一版本上线了。他们花了50美金租了主机。真正发生转机的时候在2001年2月，他们在他们知道的地方进行网站宣传，甚至于他们在互联网找到老师的邮箱，他们给老师写邮件介绍他们的网站，后面流量猛增。</p>

<p>有了用户后服务需要跟上，有些用户要求他们提供APA格式，他们把这一功能做成付费形式。当然在那个年代还没有SAAS,对于SAAS的一些差异化付费也没有相关方面的研究。他们发现一次付费终身使用的服务比较适合用户。但是对于最大化收入原则并不是最好。他们总结，网站所有的改动是否有成效是需要经过用户检验的，不是当下的决定是对或错，将来有数据证明。对于300美金一次性支付就是很好的例子。07年的时候，网站已经有百万流量了。他们的一个朋友提议可以推出广告服务。后来他们的广告CPM(每千次展示率)超过同业。2016年的时候，EasyBib核心业务超过100万美元，并且没有融资。Neal Taparia 和 Darshan决定将业务卖出给Chegg公司，当时他们仍在Chegg公司，后来他们离开了Chegg公司，开始了下一轮新的创业。</p>

<h3 id="复盘">复盘：</h3>
<p>1 - 首先有个idea，并能够从最终用户角度考虑功能；</p>

<p>2 - 其次起步要快，快速搭建第一版本；</p>]]></content><author><name>Ryan</name></author><category term="startup" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">把贺卡生意做上互联网</title><link href="/startup/holiday-card/" rel="alternate" type="text/html" title="把贺卡生意做上互联网" /><published>2021-12-10T00:00:00+08:00</published><updated>2021-12-10T00:00:00+08:00</updated><id>/startup/holiday-card</id><content type="html" xml:base="/startup/holiday-card/"><![CDATA[<p><img src="https://img-blog.csdnimg.cn/20210126234714598.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjU3NzQxMQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" /></p>

<h3 id="应用场景">应用场景</h3>

<p>小秋要离开公司了，公司同事想给小秋开个告别派对，但是疫情期间，大家都在家里工作。大张在<a href="https://thankbox.co">Thankbox</a> 设定了一些基础信息，例如接收人，贺卡主题等。同事们就在Thankbox 里面给小秋写贺卡，贺卡内容可以包括文字，图片，视频，甚至是红包，大家写好后就直接email给小秋。小秋收到后很感动。这就是Thankbox 的由来。</p>

<h3 id="thankbox-故事线">Thankbox 故事线</h3>

<p>创始人Valentin, 大学毕业后从事手机游戏开发。此前没有任何web开发经验，从2020年开始学习web开发。受英国的办公室文化启发，当同事要周年庆祝或者离开公司，同事们凑份子钱，但是大家都不习惯用现金，都纷纷去atm提款。在2020年3月，大家在家办公，他觉得时机到了，可以推出一个在线贺卡之类的产品，简单做了调研就投入了。</p>

<p>最初，他和妻子讨论以怎样的形式进行开始，因为他没有太多的web开发经验，所以决定雇佣开发人员快速把产品雏形做出来，但是也受预算的限制，最终找了个很好的小伙伴，以股份的形式兑现第一版本的开发费用。所以前期的投入就是设计上的支出，大概花了1000美金。很快第一版本出来了，差不多两个月，在2020年5月这样子。我的想法就是当你有一个很好的想法，只是成功一半，要动手做，重要的是，还要快，把你的想法落地。</p>

<p>产品建成起初，他就在他的朋友圈里推广，产品卖的不怎样，大学的一个校友，公司正好有人离职，就用上。反响很好激励了Valentin，产品开发后的第一个月卖了6单。根据客户的反馈陆续完善了bug和一些功能。以及花钱做了使用视频和投入一些社交产品的广告，例如咱们朋友圈的广告。</p>

<p>目前Thankbox一个月收入有3200刀。Thankbox 按每个5.99刀收费。未来可能会推出企业定制的套餐。</p>

<h3 id="技术栈">技术栈</h3>

<p>服务器采用托管，1cpu，1g ram， 25g硬盘，一个月5刀；</p>

<p>图片存储采用图片云存储服务，当然为了保证图片浏览快速，必须的；</p>

<p>产品框架采用 Laravel + Vue， php的框架，我不是很熟悉，有空我开个blog，详细讲下我了解的rails 技术栈哈；</p>

<p>部署和服务管理采用  Laravel Forge</p>

<p>管理员仪表盘用 Laravel Nova</p>

<p>邮件应用 Mailgun</p>

<p>支付采用 Stripe</p>

<p>网站分析 Fathom</p>

<p>错误报告和服务监控用 Honeybadger</p>

<p>日志采用  Papertrail</p>

<h3 id="最后">最后</h3>

<p>疫情当下，身边很多场景往往都有痛点，解决痛点就是一个商机。正如写在本文，车厘子检出病毒阳性，车厘子市场商家肯定受到冲击，那么如何解决他们的困局，聪明如你，挖掘一个致富的机会。</p>]]></content><author><name>Ryan</name></author><category term="startup" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">由护工跨行业投身到互联网行业</title><link href="/startup/nursing-to-internet/" rel="alternate" type="text/html" title="由护工跨行业投身到互联网行业" /><published>2021-11-21T00:00:00+08:00</published><updated>2021-11-21T00:00:00+08:00</updated><id>/startup/nursing-to-internet</id><content type="html" xml:base="/startup/nursing-to-internet/"><![CDATA[<p><img src="https://img-blog.csdnimg.cn/20210125211241439.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjU3NzQxMQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" /></p>

<p>电商时代，透过商品的描述，我们能够判断商品是否满足我们的需求就是依赖商品评论了。 柯蒂斯Curtis Boyd） 还是护工的时候，依赖帮助一个美容医师移除负面虚假的评论，成功的付清了助学贷款以及日后创立的Objection Co这个帮助商家移除虚假评论的在线平台。</p>

<p>时间回到六年前，柯蒂斯实习那一年，当时他还没有付清30,000美元的学习贷款，还在急诊室实习。一天一个美容医生走进急诊室，当时这位美容医师心情差到极点，因为一些负面的评论让他失去了客户咨询的生意。柯蒂斯问清楚了情况，就说可能能够帮助他移除负面的评论。美容医师开玩笑说，好啊，如果你可以做到，那么他就可以帮他还清助学贷款。隔天柯蒂斯再次打电话给美容医师，确认对方不是开玩笑。医师说不是开玩笑，负面评论出现的一周他已经失去了7，8个新的客户了。说干就干，柯蒂斯花了三天研究评论模式并与评论平台的管理员沟通，管理员就是不同意移除评论。在那这个周末柯蒂斯买了机票直接飞去了在线评论平台的总部洛杉矶，看是否能够直接沟通。还好有位高管接待了他并告诉了他评论的细则。有了这些建议柯蒂斯飞回了家并有开始尝试。最终又花了2天成功的把负面评论移除。美容医师也信守承诺付清了助学贷款。这个事情的契机下，使柯蒂斯意识到解决一个问题能够帮助到许多人。美容医师也是当地医疗机构的权威，也给柯蒂斯介绍了500多个客户。</p>

<p>当时的柯蒂斯觉得只要有电脑就能够完成他的工作，所以他由零开始学习编程，并且也尝试着与许多人沟通自己的想法，也开始着手建立自己的平台。他首先在upwork 上找了一个印度的开发团队，但是这个团队经常没有能够按照时间点完成任务，并且费用也越来越多，迫不得已，他结束了和印度团队的合作。第二次他找了个乌克兰团队，这个团队很棒，印度团队做一年的工作量这个团队三个月就完成了。</p>

<p>起初平台建起来，和大家想的一样，都想象有很多用户一下子涌进来。当然，这只是想象。柯蒂斯从ClearBanc获得了投资，通过资金，他们把精力放在一个专门收集各行业负面评论的工具上。然后他们使用他们的产品去识别虚假的负面的评论。如果有虚假评论他们就会给商家致电并且发送明信片。每天他们会从各行业40000条评论中进行筛查，并且有个专门的3人小组，一周需要给2500家商户致电。在这个方法下，第一个月收入有2000美金，第二个月到了10000美金。</p>

<p>互联网的今天，有想法有行动力是可以开创一片蓝海的。笔者觉得只要找到一个能够帮助到别人的想法，并变现；然后寻找市场检验你的产品能力；保持信心，由零开始跨入互联网行业是可行的。</p>]]></content><author><name>Ryan</name></author><category term="startup" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">安装Rails开发环境 MacOS 篇</title><link href="/ruby%20on%20rails/macos/rails-enviroment/" rel="alternate" type="text/html" title="安装Rails开发环境 MacOS 篇" /><published>2021-10-10T00:00:00+08:00</published><updated>2021-10-10T00:00:00+08:00</updated><id>/ruby%20on%20rails/macos/rails-enviroment</id><content type="html" xml:base="/ruby%20on%20rails/macos/rails-enviroment/"><![CDATA[<p>需时大概30分钟</p>

<p>我们将在MacOS 10.15 Catalina安装 Ruby On Rails 环境。 10.15以前的系统版本也同样适用，可能会有些小问题，但是可以上网搜索解决或者给我留言。</p>

<h3 id="配置终端">配置终端</h3>
<p>使用ZSH作为你的终端，我们用</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~/.zshrc
</code></pre></div></div>
<p>替代</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~/.bash_profile
</code></pre></div></div>

<p>你也可以手动启动。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>chsh -s /bin/zsh
</code></pre></div></div>

<h3 id="安装homebrew">安装Homebrew</h3>
<p>首先我们需要安装 Homebrew. Homebrew是 MacOS的一个安装包管理工具。它使用非常简单。启动的时候如果出现提示安装 XCode CommandLine Tools， 点击’同意’按钮就可以了。</p>

<p>打开终端。运行</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
</code></pre></div></div>

<h2 id="安装ruby">安装Ruby</h2>
<p>推荐 Ruby 版本2.7.0.</p>

<p>Homebrew安装完成后，我们就可以安装Ruby了。我们采用<a href="https://github.com/sstephenson/rbenv">rbenv</a>管理和安装Ruby在终端运行</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew install rbenv ruby-build
</code></pre></div></div>

<p>把rbenv加入到终端配置中</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>echo 'if which rbenv &gt; /dev/null; then eval "$(rbenv init -)"; fi' &gt;&gt; ~/.zshrc
source ~/.zshrc

### 开始安装Ruby
rbenv install 2.7.0
rbenv global 2.7.0
ruby -v
</code></pre></div></div>
<h3 id="配置git">配置Git</h3>
<p>我们使用Git作为我们的开发版本管理工具，下面的教程也需要用到。所以我们需要有个Github账户，如果没有可以点击<a href="https://github.com/">注册</a>。</p>

<p>把下面代码复制到终端运行，把example改成自己的邮箱和用户名。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git config --global color.ui true 
git config --global user.name "YOUR NAME"
git config --global user.email "YOUR@EMAIL.com"
ssh-keygen -t rsa -C "YOUR@EMAIL.com"
</code></pre></div></div>
<p>把生成的SSH Key 加入到Github账户当中。复制黏贴到<a href="https://github.com/settings/keys">Github</a></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cat ~/.ssh/id_rsa.pub
</code></pre></div></div>

<p>完成上面步骤后可以进行如下测试.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ssh -T git@github.com
</code></pre></div></div>
<p>得到下面的信息提示表示成功</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Hi excid3! You've successfully authenticated, but GitHub does not provide shell access.
</code></pre></div></div>

<h3 id="安装rails">安装Rails</h3>
<p>推荐安装6.0.2.1版本， 运行</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gem install rails -v 6.0.2.1
</code></pre></div></div>

<p>rails 安装完成后，我们需要更新下配置，在终端运行下面命令</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>rbenv rehash

### 查看rails 版本
rails -v
# Rails 6.0.2.1
</code></pre></div></div>

<h2 id="安装数据库">安装数据库</h2>

<p>rails 框架比较轻便的数据库sqlite3,我们首先安装这个,终端运行</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew install sqlite3
</code></pre></div></div>

<h3 id="安装mysql">安装MySQL</h3>
<p>如果之前有PHP开发经验，可能对MySQL比较熟悉。 终端运行:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew install mysql
</code></pre></div></div>
<p>命令运行完后，可能会有一些提示，按照提示执行就可以了。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># 启动MySQL 服务:
brew services start mysql
</code></pre></div></div>

<h3 id="安装postgresql">安装PostgreSQL</h3>
<p>同样通过Homebrew安装:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew install postgresql
</code></pre></div></div>

<p>命令运行完后，可能会有一些提示，按照提示执行就可以了。
启动服务</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew services start postgresql
</code></pre></div></div>

<p>默认Postgresql 用户就是系统的root用户，可以直接登录进去。</p>

<h3 id="最后一步">最后一步</h3>

<p>Mojave系统改变了一些头文件的位置，我们需要执行如下命令。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo installer -pkg /Library/Developer/CommandLineTools/Packages/macOS_SDK_headers_for_macOS_10.14.pkg -target /
</code></pre></div></div>

<h3 id="测试">测试</h3>

<p>到目前为止，基本配置工作完成了。我们建个项目测试下。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>### 建立项目
rails new myapp

### 使用MySQL数据库
rails new myapp -d mysql

### 使用Postgres数据库
rails new myapp -d postgresql

### 安装好后，进入项目文件夹
cd myapp

###  创建数据库
rake db:create

### 启动
rails server
</code></pre></div></div>

<p>打开浏览器访问 http://localhost:3000, 成功的话应该可以看到
Yay! You’re on Rails!</p>]]></content><author><name>Ryan</name></author><category term="ruby on rails" /><category term="MacOS" /><summary type="html"><![CDATA[需时大概30分钟]]></summary></entry><entry><title type="html">找不到好的创业点子，试试EXCEL</title><link href="/sideproject/excel-side-project/" rel="alternate" type="text/html" title="找不到好的创业点子，试试EXCEL" /><published>2021-10-05T00:00:00+08:00</published><updated>2021-10-05T00:00:00+08:00</updated><id>/sideproject/excel-side-project</id><content type="html" xml:base="/sideproject/excel-side-project/"><![CDATA[<p><img src="https://img-blog.csdnimg.cn/20210124170557466.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjU3NzQxMQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" /></p>

<p>很多时候，开发人员空有一身好本事，但是就是想不到一个好的创业点子。如图可以试试EXCEL。上周有个朋友跟我说了一个需求，单位里有个软件会临时分配清单客户，需要及时记录，过了一定的期限这些客户信息就不显示了。而开发客户不是一朝一夕能够谈成的，更多的他们都记录在笔记本里面，但是对日后的查询又会不方便。所以拜托我看看能不能转成电子档的。这个需求在软件开发工程师理解就是1到2个表解决的问题，而我第一时间想到了Excel，用excel把所需要的字段信息整理，然后逐个记录，也可以查询，可以存在网上，随时随地有客户端就可以查阅并且更新。</p>

<p>很多SAAS初创企业面临的最大竞争者其实是EXCEL，但是存在竞争都是有好处的.百度或者谷歌搜索一波 excel template，会看到各种各样的EXCEL样式，针对每个样式的EXCEL大都可以挖掘出需求，注意了。这里的样式不是颜色的意思，是各行业。</p>

<p><img src="https://img-blog.csdnimg.cn/20210124170615971.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjU3NzQxMQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" /></p>

<p>举例说明，通常收入支出表是会计金融行业才关注的，而且也有相关的格式，但是自由职业者是不是也会需要？婚礼统筹是不是也会需要？房屋出租是不是也会需要？每个行业一细分就会是一个业务，再把周边业务打通，就可以做一个产品了。</p>

<p>这个不是瞎说也不是瞎想。从EXCEL表格业务细分出来的初创公司有<a href="https://www.runsandbox.com/">Sandbox</a>(早教方面的saas，方便教育人员安排活动)，<a href="https://www.sweptworks.com">swept</a>(管理家政清洁的SAAS平台),<a href="https://www.littlehotelier.com">Little Hotelier</a>（AirBnb上方便的调度平台）。</p>

<p>留心琢磨，下个成功的SAAS产品说不定你可以从EXCEL上找出来。</p>]]></content><author><name>Ryan</name></author><category term="sideproject" /><summary type="html"><![CDATA[]]></summary></entry></feed>