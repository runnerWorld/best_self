var store = [{
        "title": "从500强企业中辞职出来创业",
        "excerpt":"   今天的主人公 Rachit Khator，Stackby.com的创始人。前500强企业员工，高薪福利好，在职时候就经常使用电子表格管理工作流程，但是也遇到很多麻烦，所以他也在寻求CRM或者项目管理软件去处理他碰到的问题，但是都不尽如人意。他通过他的渠道做了个小调研，收集大家碰到的情况。便毅然的在2018年美国500强公司辞职了，并且去到印度开公司。   当时回到印度碰到的第一个问题就是人手，Rachit Khator所在的城市，是以纺织品和钻著称的，所以要搭建一支技术团队还是比较慢的，就这样不断招人和完善产品，历经两年，产品问世。其中的反差就是之前领的6位数工资以及舒适的岗位，到两年0收入。后来Rachit  说其实还是想拥有自己产品的执念支撑。   产品的盈利模式很简单，也是目前流行的。有三种收费套餐，免费套餐，标准套餐以及定制套餐。目前在1年的情况下已经累积了4千用户。现在每月盈利在5万美金。   关于 Stackby.com   Stackby.com 轻松的把电子表格打造成了一个数据库，使用人可以不需要懂任何数据库的技术（包括数据类型，索引一大堆数据库专有名词），不需要懂代码，轻松的就可以把自己的业务放到上面进行管理。也可以轻松去整合市面上的api，如脸书，油管，g家等，去读取上面的数据。项目管理，视频创作，市场营销这类场景统统试用。   Stackby.com 主要采用React作为前端，Node.js作为后端。整个js技术栈。   写在后面   其实若干年前，我就碰到一个以电子表格为基础的应用，一下子想不起来了。国内团队开发的。我们大多数做web开发的，以CRUD为核心，如果可以灵活改造电子表格，是可以解决大部分业务管理系统的需求的。无非就是灵活自定义数据类型，各种查询条件自定义，灵活创建自定义表单。使用户随心所欲的录入数据，然后在随心所欲查询，图形化展示，导出下载等  ","categories": ["startup"],
        "tags": [],
        "url": "/startup/quit-from-500/",
        "teaser": null
      },{
        "title": "关于构建工具网站的摸索以及记录",
        "excerpt":"视频下载网站twdown和fbdown，工具类网站致富可以很简单   互联网当下,  推特和 脸书 盛行，基本就类似我们的微博和qq空间。这两个应用里面包含大量有意思的视频，但是下载这些视频比较麻烦。基于这个思路，有人开发了专门下载推特和脸书视频的网站，twdown和fbdown。 相信这两个网站深受自媒体行业人的喜爱（大量素材）。   我在similarweb看了下这两个网站的数据。 twdown每个月平均有78百万访问， fbdown 每个月1.34千万访问。这两个网站挂谷歌的广告联盟，这是个什么概念呢？举个例子，1个月有10万访问，那么就有1千美金收入了。其实开发者需要做的就是分析视频的下载地址，有点难度，但是并不是不能突破。   思考   类似这样的工具类网站还有很多。图片下载，音频下载，视频下载，毕竟开发者做的是国外的，咱们可以做国内的。微博上的视频是否可以提取？微信的呢？   其他   今日与友人聊天，再次聊到工具网站，再这坐下补充。 工具类的网站开发还可以做      去水印工具，现在很多图片加水印，如果有可以识别水印，然后可以处理去掉水印，那也是不错的；   在线识别图片，例如图片转pdf。或者pdf 转word。等等类似这些办公室经常会碰到的问题，即使是小问题。   similarweb，是一个很好的例子。也是工具类网站；可以观测所有网站的情况  ","categories": ["sideproject"],
        "tags": [],
        "url": "/sideproject/build-website-tool/",
        "teaser": null
      },{
        "title": "1年12个项目",
        "excerpt":"   今天来聊下数字游民狂人Pieter Levels， 我更喜欢称他是项目狂人，因为他1年创建了12个项目，没有很强的行动力，恐怕连半数项目都做不来。12个项目当中获取有很好的创业idea，也可能激发你创业的idea，谁知道呢？   Play My Inbox  Levels和他朋友有个习惯，他们对于喜爱的歌曲，他们会将歌曲链接放入邮件发给对方。基于这个习惯，他开发了这个产品，将收件箱的喜爱歌曲获取出来然后循环播放。个人非常喜欢这个idea。   Go Fucking Do It  每个人在可接受的压力下，是可以迫使自己达到一定的目标。这个产品就是这么来的。设置一个目标和一个实际的时间，如果到了时间节点你没法达到目标，你压在网站的钱就会没收了。。。   Tubelytics  这个产品是一个服务自媒体的数据分析平台。实时监控并查看视频平台各频道的情况。但2015年时候这个产品就停止了。   NomadList  大名鼎鼎的NomadList,方便用户能够了解世界上哪个城市能够更好的生活和远程工作。主要参数有生活成本，天气（这个太重要了），网速   NomadJobs  只为创业公司提供的职位发布平台，并且完全按照Levels的作风，只能是远程工作。   GifBook  上传你喜欢的Gif图，然后将图片变成动画书，类似小时候一个动作需要画很多张图，然后快速的翻这些图，这个动作就活动起来了。有时候老外的想法比较奇特。。。   Nomads  一个很酷的数字游民聊天社区。在社区里面你可以了解很多世界各地的资讯。   Remote|OK  这个产品厉害了。主要是展示远程工作职位的，不同于传统的招聘网站，不能够发布职位，产品是采集那些远程职位然后进行展示的。   然后，貌似没有12个项目呢，有些栏目可能烂尾了。。。从以上项目可以看出，基本上Levels一个人活出了一个团队，很有想法的全栈的工程师。  ","categories": ["sideproject"],
        "tags": [],
        "url": "/sideproject/1year-12-projects/",
        "teaser": null
      },{
        "title": "sideproject做不下去就卖掉",
        "excerpt":"   痛点  现实生活当中，当我们灵感捕捉到好的idea时候，往往就会信心满满的去做。但我们把项目推出市场后，反应很冷淡，我们可能就对这些项目没有那么关注了，这样的例子比比皆是。1Kprojects 是一个可以交易业余项目的平台，把关注度不高的业余项目放到平台上面售卖，这是1Kproject创始人Othmane的初衷。   平台收入  目前项目已经运行了一段时间。现在的收入基本每个月800美金左右。在平台上发布业余售卖的项目不需要收费，主要是与客户的信息交流进行收费，一次性收费19美金。      关于这种收费模式也让Othmane纠结了一段时间。Othmane考虑一般的收费营收模式主要是接入支付网关，那么可以在交易当中充当中间人抽取提成，但是对于业余项目，并且关注度不高的，这个切入点可能比较困难。后来他才想到了这种模式。   结束语   很多关注度不高的项目的确可能解决一些问题，但是可能也比较小众。这个是一个不错的电商市场。正如之前讲到一篇游戏帐号也可以交易   ","categories": ["sideproject"],
        "tags": [],
        "url": "/sideproject/sideproject-market/",
        "teaser": null
      },{
        "title": "做个网站设计开发工具，轻松每月4万块",
        "excerpt":"   Designmodo是一个SAAS平台，能够帮助用户快速搭建网站以及设计邮件样式。平台下面主要有postcasds（设计邮件模版），slides（网站搭建工具，静态）和startup（拖拽搭建网站模版）组成。   Andrian Valeanu,Designmodo的创始人。只因对技术和互联网感兴趣，一切都是靠自学。17岁的时候开始学习SEO, 设计以及开发需要的技能。当时就开始做了第一个网站，一个简单的论坛以及在线摇滚杂志。当年我也是从论坛开始学习开发的，论坛的确是个很好入门的小App。Andrian Valeanu21岁从摩尔多瓦共和国搬去西班牙巴塞罗那, 他回忆当时，他所在摩尔多瓦共和国领的薪酬很低，一个月350美金，他当时就已经暗暗决心要辞职并且把所有时间投入到他的项目当中，很快他的项目可以让他每个月挣到350美金，他马上就辞职。在2012年到16年之间，Andrian Valeanu 主要售卖设计素材和网站模版，直到现在SAAS成为主要的商业模式。   如果你对你的生意有信心，那么就全部投入（包括时间精力钱财）   产品打造初，Andrian Valeanu基本没有什么收入，他需要寻找合适的合伙人。他采用了收益分成的形式，以至于现在他的团队也是以这种方式进行收益分成的。产品开发初只具备基础功能，他觉得是设计把产品和其他竞品拉开距离的，   他们当时投入了非常多的精力在设计上面。由于是独立公司，意味着没有投资人，所有的收入只靠销售来获得。尽管这样，他们团队也将收入投入到产品中。还有一个就是快，他们细致分析每一个市场上面需要的功能，力求在竞争对手产品开发前完成。   产品一开始用WordPress开发，后面集成WooCommerce（主要用于支付和客户信息管理）。产品前端采用 Bootstrap, jQuery, Vue, React。产品设计工具用Figma。   目前团队主要致力于无代码搭建网站，把旗下的产品全部无代码化，从而能够让用户更加简单的使用产品。   关于引流和盈利模式   开始也采用了付费广告，但是效果不是很佳，Andrian Valeanu很快就放弃。实际上，团队blog能够吸引很多用户，目前已经有1000多篇博文，再者就是一些很流行的免费的素材和模版。   目前平台主要盈利模式还是SaaS 。提供按月，按季度，按年付费。支付渠道采用PayPal 和Stripe。同时Andrian Valeanu非常推荐SaaS模式，通过这样，团队可以清楚了解产品盈利功能和数据，以便于后期更好的优化提升产品。   写在后面   最后想以Andrian Valeanu给广大创业者的建议做结尾，有想法，要去尝试，不要害怕失败。 如果尝试去做，就不会失败。 如果根本不尝试，那么就是失败。  ","categories": ["sideproject"],
        "tags": [],
        "url": "/sideproject/website-design/",
        "teaser": null
      },{
        "title": "解决一个小问题比尝试解决五个大问题要好得多",
        "excerpt":"今天分享个因为付费，所以自己做个车轮的故事。本文的标题出自今天主人公开发平台一路的心路历程。   Dirk 是个在阿姆斯特丹的软件工程师。他在做自己的一个项目时候，发现有个视频截屏API需要付费，一琢磨，就自己做了个，并且挂到网站，以SaaS的模式开始了盈利。   平台介绍   一切要从开始做个兴趣网站说起，Dirk 决定做一个关于新闻文章目录的网站，在首页的时候，他想展示一个文章索引的截屏图片，这样子需要一个自动截屏的功能。然后他就决定搜索一下相关功能API。好不容易找到一个挺满意的，但是需要35块钱一个月，因为是兴趣项目，所以也没法接受付费。琢磨了下干脆自己开发一个。   每天1到2个小时，努力了1个多月，终于把MVP(最小化可用产品)做了出来，其中也包含一些小功能。这就是今天介绍的Screenhsotapi.net      平台主要用Laravel搭建，前端主要用js和vue框架，其中还用了 Selenium。   关于引流和盈利模式   平台目前采用g家的付费广告，每个月花费大概在100块这个样子。目前盈利平均400块。关于投入付费广告的策略可以参考我以前的文章，主要就是使用工具去查看竞争对手网站或者相关的检索关键字，根据检索关键字做付费广告。相关工具有Ahrefs 和 SimilarWeb   平台使用SaaS模式，有个入门的免费套餐，提供100个截屏每月，收费从9块开始，相比之前的35块还是便宜的多。   写在后面   由于是个开发人员，对于市场这块还是摸索着来，所以平台还在慢慢成长。Dirk也对未来平台推广吸引用户策略，一是完善SEO，二是通过blog 让更多用户能够了解平台。  ","categories": ["sideproject"],
        "tags": [],
        "url": "/sideproject/fix-problem-bigger-than-five/",
        "teaser": null
      },{
        "title": "纸牌游戏也可以盈利",
        "excerpt":"多年前。当学校开始开设Windows课程。老师上课的时候，或者大家操作电脑学习的时候，身边的很多童鞋都在玩扫雷或者纸牌接龙。今天和大家分享的是纸牌游戏，我们的主人公通过纸牌游戏也可以赚取被动收入，并且进一步去做更多其他感兴趣的事情。   Holger, 一个来自丹麦哥本哈根的设计师。设计师的功底，后转开发，并构建纸牌游戏而且盈利。最初Holger开发了游戏后，获得了每个月大概800美金的收入，最初版本是Mac单机版，通过Mac App Store下载。但去了纽约创业开办公司，很不幸，公司被竞争对手打败。通过这次创业，Holger不得不从新出发。   Holger一直对纸牌游戏情有独钟。重新构建了产品。Online Solitaire，目前每个月的盈利在1500美金。      关于更多-盈利，运营以及技术   开始时候，Holger通过一篇文章受到启发。这篇文章是关于如何把副业做成生意，从而获得被动收入。所以他很聪明的认识到，他不需要重新造轮子，而是做一些市场上成功的产品。最终他打算优化之前的纸牌游戏，但是创业期间，产品没有维护，随着系统平台不算升级，产品有很多bug。所以他打算做成在线的。 在这之前，他做了一些研究。他写了个脚本抓取AppAnnie应用商店的App评价，得出结论要做个单人版的纸牌游戏。分析情况如下图：      Mac版本开发在三到四个礼拜，在线版本的开发时间也花了Holger三到四个礼拜时间，初始版本开发出来后，升级以及优化就一直有在做。   在线版本主要是采用React的技术栈来做的。用Firebase做的数据库。动画方面使用了GSAP这个库。单机版本采用ToDesktop 这个转换工具来进行各个终端转换，Windows, Mac, Linux 都可以，目测网站上介绍。   在线版的纸牌运营主要靠SEO检索。当用户想玩的时候就会上网去搜索，毕竟纸牌人人都知道，所以也不会像其他SaaS 产品一样会有一些介绍文章。通过火狐的页面优化工具来提升检索效果，目前得到g家每天的1000多次点击。   纸牌游戏会有人付费么？答案是否定的。没人会付费玩。所以目前收入主要是广告收入。广告收入主人公也有一些心得。开始用g家的广告，但是每天获利才是10块，后面更换Monumetric，有25块一天，目前使用Freestar，将近50块一天。如果通过广告获益，那么多尝试几个。   写在后面   我觉得Holger真的很能够认清现实，即使目前依然能够盈利，但是他说他不希望这个成为他依靠的收入来源，现在市场真的有很多竞争者，竞争很激烈。   话说回来，只要有心，依靠数据分析，即使是很老旧的游戏也会有市场，所谓存在即有道理。关于文中Holger提到的受启发文章，找个时间我再写个分享上来。  ","categories": ["sideproject","startup"],
        "tags": [],
        "url": "/sideproject/startup/card-game/",
        "teaser": null
      },{
        "title": "有没有想过，诗和远方的同时也可以同时学语言",
        "excerpt":"今天要分享的是关于语言学习的产品，创始人不是一个技术开发者，是一个很漂亮的妹子,叫Marina，俄国的妹子，现在在美国湾区创业。妹子本身有过几种语言学习的经历，所以在外语学习这件事情上具备很多经验。      Linguatrip 一个短期全浸式语言学习平台。通过网站，我们可以选择学习的语言，选择旅游的国家，选择旅游周数（至少两周）。我们在旅游的同时就不是单纯的旅游了，同时还可以学习一门语言。   平台现在大概有2500个语言课程，全世界大多数国家基本都可以预约，并且比直接预约语言学校的课程价格还要低，可以与当地人一起生活（可以选择住民宿）。   由于妹子是俄罗斯人，查看了下数据，挺多访问ip是俄罗斯的。      估计在俄罗斯做的推广。妹子同时在油管上开专栏，经常教授英语学习内容。如10个英语常用俚语，如何流利使用英语之类的，订阅还是挺高的。   发散思考  其实很多外国人都对中国很感兴趣，并且中国文化，中国语言的学习一直都很热门，可以模仿这个网站，与全国的教授中文学校和民宿合作，这个市场还是挺大的。  ","categories": ["startup"],
        "tags": [],
        "url": "/startup/languages-learn/",
        "teaser": null
      },{
        "title": "从内容营销到iOS开发，月入14000美金——在产品还没投放就应该开始营销",
        "excerpt":"引言   周末清明需要回老家，所以耽搁了，抱歉。今天分享的故事是关于个人数据App的。主人公叫Belle,之前从事市场营销，现从事iOS开发，与小伙伴Josh创业开了个公司，叫做HelloCode。目前在澳大利墨尔本。主打产品是Exist, 是一款集成了个人数据的App。凭借这款产品目前月入14000美金。公司还有款产品叫做larder。这是款类似书签的产品，也比较有趣。今天主要说下Exsit。如图。   Exis能够展示今日步数，睡眠时间以及一些应用的个人信息，通过这些信息展示将让用户更清晰了解自己每日情况，譬如获取了todo信息，那么就分析哪天事情处理效率，获取了日历信息，就知道哪天工作多等。   目前链接的应用在产品页面都可以找得到，有apple watch, google fit, garmin, strava, github,todolist等。按月收费和按年收费。      历程   最初。Belle还在还在Buffer公司，就已经研究要开发Exist了，当成一个业余项目来开发。小伙伴 Josh 构建了MVP(最小化可实行产品)，Belle则从事老本行，营销。由于是一个业余的项目，所以进度不是很快。Josh是一个自由职业者，所以也不能够全职来做Exist。Belle和Josh 打算做一个众筹，以一个比较低的价格来让用户进行支付，以便支撑他们能够全职进行产品。虽然众筹没能够达到他们的期望值，但是这个事情让他们有了继续往下开发好这个产品的信心。   最初的最初，Exist是一个响应式的App。并不是手机原生态的App。Belle一直在自学iOS的开发。而Josh也在捣鼓Android的开发。 Josh的本行是web开发。在2014是移动App开始盛行的年代，他们也意识到必须要把产品转到原生态App，从那时候起产品就一直迭代。   关于盈利   由于是不断获取个人数据，服务器配置需要跟上，所以一开始就是付费服务。这个想法也一直是他们所努力的方向。用户可以免费使用30天，然后要么转付费要么就删用户，虽然一开始注册需要绑定信用卡等信息，但是这样也过滤的免费的用户，更精准的转化用户，也算一种zhezong   关于推广   Belle之前在公司时候就了解某些时候公开透明一些业务是对于用户扩展很有帮助的。所以做Exist时候就公开了收入信息以及一些feature，让用户去投票以便于更好把握用户关注的功能。   在14，15年的时候，人们很关心个人的量化数据，正因为这个契机，App也很快收到用户的追捧。同时Belle也会写Blog，并且在相关内容的网站投稿（Lifehacker和Zapier），并且获得引流，因为也是内容网站，所以也会需要内容（正如我们今天的今日头条，知乎之类的）。刚好还有个契机，默林·曼恩（Merlin Mann）的大牛在播客中多次提到Exist，也涌入不少注册会员。   写在后面   Exist很难实现，其实不是，很多应用会提供Api，把数据抓取然后放在手机App上展示，就是最简单Exist的原型。其实难的是在做产品前要把产品推出去验证想法，有用户买单了才体现价值。  ","categories": ["sideproject","startup"],
        "tags": [],
        "url": "/sideproject/startup/content-market-ios/",
        "teaser": null
      },{
        "title": "一个月入1.7万的退休项目",
        "excerpt":"简介  今天要分享的主人是Michael, 他从2015年开始做QuotaGurad， 这是是一个静态ip和动态ip代理产品。Michael住在美国内华达州的拉斯维加斯。但是他去过很多地方，包括中国，波兰，香港和1/4个美国。有20年的软件开发和安全经验。曾在2014年尝试退休。但感觉无聊和担心技术落伍就重抄旧业；      QuotaGurad主要是基于云服务的应用提供服务，从15年开始，目前业务发展到2000多个客户。   构建产品缘起一个同行，产品开发到一半，但是不想继续开发下去，由新的想法，Michal了解想法后就接手了。在这一过程当中令他印象最深的就是因为不是由0开始，而是在现有一套代码上继续开发，这套代码又有用户在使用，所以即使后期有新的解决方案要重构代码，也要分两部分进行，保持现有代码用户不受影响的情况下构建新的解决方案，维护成本倍增。   关于产品的技术架构   QuotaGurad使用主要使用go语言来编写，因为Michael觉得go比较快以及方便部署；Ruby用来做后台管理以及外部应用集成；集成Stripe来实现支付；   关于运营以及商业模式  Mihael主要在      StackOverflow / Quora等在线平台上进行答疑并介绍QuotaGurad，以此来引流；   Google Adwords投放广告   Landingpage, 是广告转化的客户能够更加容易了解产品   Microsoft Azure  和 IBM Cloud，投放相关云服务平台   门户网站影响，用户可以在上面了解价格，解答   QuotaGurad 使用saas模式，按每月付费进行服务，大概有75%的用户是付费的，也推出免费的服务给用户进行体验，但有一个准则就是，免费的体验是有时效的。   写在后面   其中令我印象最深的还是，第一要有积蓄，Michael花的就是自己的积蓄，没有任何众筹或者投资，这样子确保自己能够不受其他方面的影响；第二就是只实现最主要的功能，把最主要功能实现好，第二第三功能都可以放一放。  ","categories": ["sideproject","startup"],
        "tags": [],
        "url": "/sideproject/startup/17k/",
        "teaser": null
      },{
        "title": "如何在Rails 项目里面加入图表",
        "excerpt":"在这篇文章里面，我们用到Chart.js，这是一个图表的js库。整个集成过程比较简单，运用到实际的项目需要自己考虑项目的情况，这里只做一个简单展示。 第一步 我们直接引用cdn。打开的application.html.erb，加入这段代码 &lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/chart.js@2.9.1/dist/Chart.min.css\"&gt; &lt;script src=\"https://cdn.jsdelivr.net/npm/chart.js@2.9.1/dist/Chart.min.js\"&gt;&lt;/script&gt; 第二步 然后新建一个页面，创建一个canvas &lt;canvas id=\"myChart\" width=\"960\" height=\"200\"&gt;&lt;/canvas&gt; 第三步 加入图表相关代码，直接在页面上写也是可以的。 &lt;script&gt; var ctx = document.getElementById('myChart'); var myChart = new Chart(ctx, { type: 'bar', data: { labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'], datasets: [{ label: '# of Votes', data: [12, 19, 3, 5, 2,...","categories": ["ruby on rails"],
        "tags": [],
        "url": "/ruby%20on%20rails/how-to-add-chart-to-rails/",
        "teaser": null
      },{
        "title": "Postgresql非本地连接设置",
        "excerpt":"机器在Ubuntu；   Step1 postgresql.conf   postgresql.conf存放位置在/etc/postgresql/x/main下，这里的是PostgreSQL的版本号，编辑或添加下面一行，使PostgreSQL可以接受来自任意IP的连接请求。   listen_addresses = '*'  Step2 pg_hba.conf   pg_hba.conf，位置与postgresql.conf相同，虽然上面配置允许任意地址连接PostgreSQL，但是这在pg中还不够，我们还需在pg_hba.conf中配置服务端允许的认证方式。nano. 打开该文件，编辑或添加下面一行。  host  all  all 0.0.0.0/0 md5   默认pg只允许本机通过密码认证登录，修改为上面内容后即可以对任意IP访问进行密码验证。对照上面的注释可以很容易搞明白每列的含义，具体的支持项可以查阅文末参考引用。   完成上两项配置后执行  sudo service postgresql restart  重启PostgreSQL服务后,允许外网访问的配置就算生效了。   如果是云服务器，检查一下是否屏蔽5432这个port  ","categories": ["postgresql"],
        "tags": [],
        "url": "/postgresql/postgresql-connection/",
        "teaser": null
      },{
        "title": "星爸爸的生意故事",
        "excerpt":"800亿星爸爸的故事      现代白领，工作时候少不了一杯咖啡。今年疫情，快递现在才慢慢恢复，我家的口粮咖啡豆已经喝光。不禁让我想起了疫情前在咖啡馆的美好时光。今天我们来聊下星巴克的故事。   星巴克全球拥有近30,000家咖啡馆, 占咖啡销售总额的57%，在美国有将近2/3的咖啡厅销售额来自星巴克。星巴克如此多的门店，每个门店的销售额可能也会相互影响，毕竟1，2线城市无论哪一区都有2到3家星巴克。星巴克该如何解决这个问题呢？   1970年，三个年轻人决定进军咖啡行业，他们是Zev Siegl, Jerry Baldwin 和Gordon Bowker。他们找到了一位导师，Peet是当时将烘培咖啡带到美国的人，而且他很熟悉咖啡行业。在Peet的帮助下，他们顺利的在西雅图派克市场开了咖啡豆子烘培店。我们经常看到某宝的派克包装就源于此.      转折   第一个10年，年轻人们开了5家分店，那个时候，也就是70年代，人们不在外面喝咖啡，只在家里喝。星巴克最初专注卖好品质的咖啡豆。直到一个人的出现，他是星巴克第一任的市场总监和销售总监，他就是霍华德·舒尔茨。   1983年，舒尔茨前往意大利，并带着一个想法返回：将咖啡豆商店转变为咖啡馆。第二年，星巴克就开始售卖拿铁。这个转变取得了成功，4年后，舒尔茨与投资人以380万美元的价格收购了星巴克。 当时舒尔茨34岁。   扩张   舒尔茨奉行积极扩张的战略。 到1992年星巴克上市时，它已经拥有165家分店。 到1996年，已经开设了1000多个分店，包括在日本和新加坡开设的第一家国际咖啡馆。 增长如此之快，仅仅三年之后，星巴克就开设了第2,000家分店。   舒尔茨在2000年从CEO转变为执行董事长，当时星巴克在十几个国家经营着3500家分店。 从2000年到2007年，星巴克咖啡厅的数量增加了三倍多，从3500家增加到15,000多家。 在此期间，星巴克平均每年开设1500家分店，仅2007年就开设了2500家。 销售额从20亿美元猛增至94亿美元。   重新掌舵   2007年金融危机，经济萧条，很多人不怎么喝咖啡了。星巴克碰壁，股价狂跌50%。于是没有办法，舒尔茨只能再次上场。舒尔茨掌舵这个新闻就使当时股价上涨9%。他在09年关闭了300多家分店，裁掉了6,700咖啡师。在他回归后的一个月，他令全美所有分店停止营业一个下午，这样他就可以为超过13.5万名咖啡师重新培训如何制作其特色咖啡。 舒尔茨的目标是通过使星巴克成为一种体验，而不只是一个喝咖啡的地方，来提醒顾客他们对品牌的喜爱，提高品牌价值。星巴克停止售卖早餐三明治，并重新让咖啡馆散发新鲜的咖啡香气。舒尔茨甚至要求拆除自动咖啡机。 自动咖啡机使服务速度更快，但消除了看咖啡师制作每杯咖啡的浪漫气氛和戏剧性。 舒尔茨的改造成功了。 星巴克的股票在2009年飙升了143％以上，销售额也有所反弹。舒尔茨改变策略期间，星巴克几乎没有开设任何新分店。 但是，2012年后就又投入到开新分店步伐中，而且很快速。到2017年，星巴克又开设了近3,000个营业点，到年底在全球拥有28,000个咖啡馆。   问题和解决  回到前面，分店如此多，怎么提高利润？同时消费者口味也在不断变化，如何迎合？我最喜欢的星冰乐平均含有57克糖，是每日摄入量的2倍，现代人都提倡低糖。为了解决这些问题，星巴克又开始调整策略，2019年关闭了150家门店，此外星巴克也推出了冷饮和果味清爽饮料等清淡饮料。星巴克推出最新的高档店：星巴克臻选烘培工坊。庞大的20,000平方英尺的烘培工坊被设计为旅游胜地。在这里，星巴克的咖啡师和调酒师尝试使用不同的酿造方法，并制作出新颖的创新咖啡饮料。这些新饮品很受欢迎。在最初的几个星期，上海烘培工坊每天平均销售额是64,000美元，是普通咖啡馆的一周销售额两倍。在烘培工坊，你可以亲眼见到咖啡生豆一路制作到冲成咖啡的过程。      星巴克把体验做到极致，撰写本文时候我仿佛已经又闻到咖啡馆的豆子香了。   ","categories": ["business"],
        "tags": [],
        "url": "/business/starbuck-business/",
        "teaser": null
      },{
        "title": "把传统测试放上云",
        "excerpt":"今天和大家分享的是LambdaTest      痛点  LambdaTest是一个可以进行多浏览器，多手机终端测试的云平台。 创始人Asad Khan本身是一个从事多年测试行业的技术人员，通过多年的工作经历他发现目前行业里面没有一款可以既测试又管理测试任务的平台，想法一直萦绕在他脑里，反复的徘徊。直到他找到合适的伙伴（团队）去把想法实现出来。   营收  目前平台收入大概在每月5万美金，平台推出的服务包含不同的套餐价格。      像大多数新产品一样，产品的启动主要通过社交网络传播（Quora, Hacker News,Reddit）。   结束语  项目启动有风险，即使是技术人员，也不轻易编码实现，而是等到合适的小伙伴一起组队。   ","categories": ["sideproject","stratup"],
        "tags": [],
        "url": "/sideproject/stratup/testing-cloud/",
        "teaser": null
      },{
        "title": "一窥谷歌产品全家福",
        "excerpt":"   之前讲到过一篇找不到好的创业点子，试试EXCEL ,今天我们把目光放在GSuit上。也许很多人并不大知道GSuit，Alphabet。是的，这并不奇怪，我们知道更多的是谷歌搜索。 Alphabet其实是google的母公司。时间来到2004年。当时没人知道google，但是Alphabet，当年以美股54美金上市，来到2020年，现在每股超过1300美元。06年的时候，Alphabet公司发布一款叫做Google Apps的产品，在2016年更名为GSuit。   我们再来看一张图。    通过图中所知，Alphabet公司的营收大部分由广告业务组成，即使这样，我们也有需要了解GSuit的产品，因为我们的创业idea 说不好也能从里面挖掘出来。Alphabet公司作为一流的互联网产品公司，他们的眼光，战略，产品线都有我们需要学习的地方。单单看产品线就众多，但是很多互联网创业公司就是吃准了这个点，专注与某一领域，甚至就在某一领域超越了Alphabet公司。   我们最熟悉的远程会议软件，今年的疫情很多行业估计已经启用远程会议了。Zoom是现在使用最多的远程会议产品，Zoom 2019年上市，到2019年7月营收330,000,000美金。2017年营收60,800,000美金， 2018 年营收151,500,000美金。截止19年底营收610,000,000美金。 占了Alphabet公司云计算以及GSuit产品19年营收只和的35%。这无疑是一个巨大的成功。从最上面的图中得知，基本上GSuit每个领域都有对应的初创企业。每个企业就是一个故事，以后有时间再和大家分享。  ","categories": ["google"],
        "tags": [],
        "url": "/google/google-products/",
        "teaser": null
      },{
        "title": "17岁妹子轻松赚取90万——帮孩子去英文名",
        "excerpt":"   17岁的一个英国女孩子Beau Jessup，创建一个帮中国小孩起英文名的网站www.specialname.cn。 在之前的9个月已经给250,000中国小孩取了英文名。之前162,000个小孩免费，然后开始每个名字按10块钱收费。在支付宝上收，然后给出三个参考名字，而且每个名字有什么名人，最后可以分享到微信和家人们讨论。   怎么做到的  Beau先创建一个4,000个名字的数据库，每个名字对应5个性格以及历史的人名。当用户选择五个自己希望小孩的性格后就开始匹配。   复盘:  这个点子很简单，但是很有用。按照她说的，父母都想把最好的给孩子。才花10块钱，可以让英美人士起一个，自己又喜欢又贴切的英文名，何乐而不为。   我们也可以给老外建一个中文名字的网站？小程序？  ","categories": ["stratup"],
        "tags": [],
        "url": "/stratup/english-name/",
        "teaser": null
      },{
        "title": "从Web开发到做支付",
        "excerpt":"   总览   PayRequest，是一个全球性的支付服务平台，一个SAAS。可以轻松创建自己品牌支付页面，管理你的支付链接，你的客户根据支付链接就可以向你的产品或者服务进行支付。全程不需要你懂代码。创始人Geert Jan Sloos，是位德国人，12岁开始写网站，到18岁，就已经运营一个web主机公司，大概客户在1000人左右。   在创业过程中，Geert Jan Sloos 觉得最难的部分应该是找到用户并且留存。他说他有在线推广经验，但是PayRequest是一个全球的服务平台，所以他还是很谨慎。他很感恩，从获得第一个用户到逐渐收获一些正面的反馈。   目前的运营模式就是从收款方收取手续费，按每笔交易1%的手续费收取。他觉得很合理，收款方有钱进账， 那么作为服务方同样有钱进账。   技术部分   平台目前依托Github的page，Jekyll。开发框架采用symfony，目前架构(Linux + Apache + Nginx + Mariadb + PHP )。   总结收获  PayRequest的业务非常简单，但正是简单，解决用户的痛点才是关键。这让我想起之前个人开发的收款工具。总所周知，wechat pay和alipay 两大支付巨头，公司办理接口业务比较方便，但是对于个人开发者来说就不是那么友好。市场上已经推出了满足个人开发者收款的工具。其实也很简单。就是在android手机上写个驻留程序，根据个人开发者的微信支付或者支付宝付款推送，获取收款信息，然后解析发给服务器，再由服务器推送给业务系统，个人开发者只需要在开发的产品上放置收款码即可。   今天分享就到这里，如果你有好的idea或者不同意见，欢迎留言讨论。   ","categories": ["stratup"],
        "tags": [],
        "url": "/stratup/web-to-pay/",
        "teaser": null
      },{
        "title": "节假日查询，一个简单很暴力的idea",
        "excerpt":"自由职业的人，或者不是朝九晚五上班的人，基本上没有放假的概念。经常会通过搜索引擎查询公众假期，除了搜索引擎自带的公众假期安排显示，这段时间搜索结果还有个叫publicholidays的网站。网站做的挺简洁，大家可以感受下.      我就纳闷，这样子的公众假期展示也会有人做么？他怎么获利？原来网站挂了google的adsense。通过similar web我们可以查看。      每个月平均两百万人访问，这个访问量真大。   这个网站是个人开发的么？带着疑问我研究了一下。我找到了关于我们,2011年成立于悉尼，为全球200多个国家地区提供公众假期查询服务，并且还会介绍假期的由来和文化等信息。   发散思考   很多很实用的小工具，往往会带来超乎想象的流量。除了公众假期？我们还会查什么？个人工资？报税？最近社会热点？  ","categories": ["sideproject"],
        "tags": [],
        "url": "/sideproject/holidays-query/",
        "teaser": null
      },{
        "title": "找不到好的创业点子，试试EXCEL",
        "excerpt":"   很多时候，开发人员空有一身好本事，但是就是想不到一个好的创业点子。如图可以试试EXCEL。上周有个朋友跟我说了一个需求，单位里有个软件会临时分配清单客户，需要及时记录，过了一定的期限这些客户信息就不显示了。而开发客户不是一朝一夕能够谈成的，更多的他们都记录在笔记本里面，但是对日后的查询又会不方便。所以拜托我看看能不能转成电子档的。这个需求在软件开发工程师理解就是1到2个表解决的问题，而我第一时间想到了Excel，用excel把所需要的字段信息整理，然后逐个记录，也可以查询，可以存在网上，随时随地有客户端就可以查阅并且更新。   很多SAAS初创企业面临的最大竞争者其实是EXCEL，但是存在竞争都是有好处的.百度或者谷歌搜索一波 excel template，会看到各种各样的EXCEL样式，针对每个样式的EXCEL大都可以挖掘出需求，注意了。这里的样式不是颜色的意思，是各行业。      举例说明，通常收入支出表是会计金融行业才关注的，而且也有相关的格式，但是自由职业者是不是也会需要？婚礼统筹是不是也会需要？房屋出租是不是也会需要？每个行业一细分就会是一个业务，再把周边业务打通，就可以做一个产品了。   这个不是瞎说也不是瞎想。从EXCEL表格业务细分出来的初创公司有Sandbox(早教方面的saas，方便教育人员安排活动)，swept(管理家政清洁的SAAS平台),Little Hotelier（AirBnb上方便的调度平台）。   留心琢磨，下个成功的SAAS产品说不定你可以从EXCEL上找出来。  ","categories": ["sideproject"],
        "tags": [],
        "url": "/sideproject/excel-side-project/",
        "teaser": null
      },{
        "title": "安装Rails开发环境 MacOS 篇",
        "excerpt":"需时大概30分钟 我们将在MacOS 10.15 Catalina安装 Ruby On Rails 环境。 10.15以前的系统版本也同样适用，可能会有些小问题，但是可以上网搜索解决或者给我留言。 配置终端 使用ZSH作为你的终端，我们用 ~/.zshrc 替代 ~/.bash_profile 你也可以手动启动。 chsh -s /bin/zsh 安装Homebrew 首先我们需要安装 Homebrew. Homebrew是 MacOS的一个安装包管理工具。它使用非常简单。启动的时候如果出现提示安装 XCode CommandLine Tools， 点击’同意’按钮就可以了。 打开终端。运行 ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\" 安装Ruby 推荐 Ruby 版本2.7.0. Homebrew安装完成后，我们就可以安装Ruby了。我们采用rbenv管理和安装Ruby在终端运行 brew install rbenv ruby-build 把rbenv加入到终端配置中 echo 'if which rbenv &gt; /dev/null; then...","categories": ["ruby on rails","MacOS"],
        "tags": [],
        "url": "/ruby%20on%20rails/macos/rails-enviroment/",
        "teaser": null
      },{
        "title": "由护工跨行业投身到互联网行业",
        "excerpt":"   电商时代，透过商品的描述，我们能够判断商品是否满足我们的需求就是依赖商品评论了。 柯蒂斯Curtis Boyd） 还是护工的时候，依赖帮助一个美容医师移除负面虚假的评论，成功的付清了助学贷款以及日后创立的Objection Co这个帮助商家移除虚假评论的在线平台。   时间回到六年前，柯蒂斯实习那一年，当时他还没有付清30,000美元的学习贷款，还在急诊室实习。一天一个美容医生走进急诊室，当时这位美容医师心情差到极点，因为一些负面的评论让他失去了客户咨询的生意。柯蒂斯问清楚了情况，就说可能能够帮助他移除负面的评论。美容医师开玩笑说，好啊，如果你可以做到，那么他就可以帮他还清助学贷款。隔天柯蒂斯再次打电话给美容医师，确认对方不是开玩笑。医师说不是开玩笑，负面评论出现的一周他已经失去了7，8个新的客户了。说干就干，柯蒂斯花了三天研究评论模式并与评论平台的管理员沟通，管理员就是不同意移除评论。在那这个周末柯蒂斯买了机票直接飞去了在线评论平台的总部洛杉矶，看是否能够直接沟通。还好有位高管接待了他并告诉了他评论的细则。有了这些建议柯蒂斯飞回了家并有开始尝试。最终又花了2天成功的把负面评论移除。美容医师也信守承诺付清了助学贷款。这个事情的契机下，使柯蒂斯意识到解决一个问题能够帮助到许多人。美容医师也是当地医疗机构的权威，也给柯蒂斯介绍了500多个客户。   当时的柯蒂斯觉得只要有电脑就能够完成他的工作，所以他由零开始学习编程，并且也尝试着与许多人沟通自己的想法，也开始着手建立自己的平台。他首先在upwork 上找了一个印度的开发团队，但是这个团队经常没有能够按照时间点完成任务，并且费用也越来越多，迫不得已，他结束了和印度团队的合作。第二次他找了个乌克兰团队，这个团队很棒，印度团队做一年的工作量这个团队三个月就完成了。   起初平台建起来，和大家想的一样，都想象有很多用户一下子涌进来。当然，这只是想象。柯蒂斯从ClearBanc获得了投资，通过资金，他们把精力放在一个专门收集各行业负面评论的工具上。然后他们使用他们的产品去识别虚假的负面的评论。如果有虚假评论他们就会给商家致电并且发送明信片。每天他们会从各行业40000条评论中进行筛查，并且有个专门的3人小组，一周需要给2500家商户致电。在这个方法下，第一个月收入有2000美金，第二个月到了10000美金。   互联网的今天，有想法有行动力是可以开创一片蓝海的。笔者觉得只要找到一个能够帮助到别人的想法，并变现；然后寻找市场检验你的产品能力；保持信心，由零开始跨入互联网行业是可行的。  ","categories": ["startup"],
        "tags": [],
        "url": "/startup/nursing-to-internet/",
        "teaser": null
      },{
        "title": "把贺卡生意做上互联网",
        "excerpt":"   应用场景   小秋要离开公司了，公司同事想给小秋开个告别派对，但是疫情期间，大家都在家里工作。大张在Thankbox 设定了一些基础信息，例如接收人，贺卡主题等。同事们就在Thankbox 里面给小秋写贺卡，贺卡内容可以包括文字，图片，视频，甚至是红包，大家写好后就直接email给小秋。小秋收到后很感动。这就是Thankbox 的由来。   Thankbox 故事线   创始人Valentin, 大学毕业后从事手机游戏开发。此前没有任何web开发经验，从2020年开始学习web开发。受英国的办公室文化启发，当同事要周年庆祝或者离开公司，同事们凑份子钱，但是大家都不习惯用现金，都纷纷去atm提款。在2020年3月，大家在家办公，他觉得时机到了，可以推出一个在线贺卡之类的产品，简单做了调研就投入了。   最初，他和妻子讨论以怎样的形式进行开始，因为他没有太多的web开发经验，所以决定雇佣开发人员快速把产品雏形做出来，但是也受预算的限制，最终找了个很好的小伙伴，以股份的形式兑现第一版本的开发费用。所以前期的投入就是设计上的支出，大概花了1000美金。很快第一版本出来了，差不多两个月，在2020年5月这样子。我的想法就是当你有一个很好的想法，只是成功一半，要动手做，重要的是，还要快，把你的想法落地。   产品建成起初，他就在他的朋友圈里推广，产品卖的不怎样，大学的一个校友，公司正好有人离职，就用上。反响很好激励了Valentin，产品开发后的第一个月卖了6单。根据客户的反馈陆续完善了bug和一些功能。以及花钱做了使用视频和投入一些社交产品的广告，例如咱们朋友圈的广告。   目前Thankbox一个月收入有3200刀。Thankbox 按每个5.99刀收费。未来可能会推出企业定制的套餐。   技术栈   服务器采用托管，1cpu，1g ram， 25g硬盘，一个月5刀；   图片存储采用图片云存储服务，当然为了保证图片浏览快速，必须的；   产品框架采用 Laravel + Vue， php的框架，我不是很熟悉，有空我开个blog，详细讲下我了解的rails 技术栈哈；   部署和服务管理采用  Laravel Forge   管理员仪表盘用 Laravel Nova   邮件应用 Mailgun   支付采用 Stripe   网站分析 Fathom   错误报告和服务监控用 Honeybadger   日志采用  Papertrail   最后   疫情当下，身边很多场景往往都有痛点，解决痛点就是一个商机。正如写在本文，车厘子检出病毒阳性，车厘子市场商家肯定受到冲击，那么如何解决他们的困局，聪明如你，挖掘一个致富的机会。  ","categories": ["startup"],
        "tags": [],
        "url": "/startup/holiday-card/",
        "teaser": null
      },{
        "title": "翘起1000万美元的高校业务",
        "excerpt":"   今天分享的案例让我想起以前做的一个项目，帮一所高校图书馆做一个论文查重查引系统，当时做的时候对这方面业务不算了解，调研的业务怎么做就简单的规划了。依稀记得当时查重查引业务按条数收费，每条1，2块钱。然后将所需要的论文信息提交给图书馆，馆内的工作人员就根据提交的信息进行查询，得到结果后，根据引用处收钱。用户就进行支付即可。实在没想到美国的这家公司把论文查引业务和论文格式业务做到了极致，一个1000万美元的生意。   这期介绍的项目是EasyBib.com,这是一个帮助用户写论文时候查引和论文格式的网站。创始人Neal Taparia 和 Darshan读高中时候就已经开始编写网站了，高中时期他们做了个徽章和HTML教程的网站。当时他们正在为论文头疼，他们需要设置繁琐的格式。正是这个契机，本身他们也是用户，他们很清楚这个产品需要解决的问题。经过两个月的努力，他们的第一版本上线了。他们花了50美金租了主机。真正发生转机的时候在2001年2月，他们在他们知道的地方进行网站宣传，甚至于他们在互联网找到老师的邮箱，他们给老师写邮件介绍他们的网站，后面流量猛增。   有了用户后服务需要跟上，有些用户要求他们提供APA格式，他们把这一功能做成付费形式。当然在那个年代还没有SAAS,对于SAAS的一些差异化付费也没有相关方面的研究。他们发现一次付费终身使用的服务比较适合用户。但是对于最大化收入原则并不是最好。他们总结，网站所有的改动是否有成效是需要经过用户检验的，不是当下的决定是对或错，将来有数据证明。对于300美金一次性支付就是很好的例子。07年的时候，网站已经有百万流量了。他们的一个朋友提议可以推出广告服务。后来他们的广告CPM(每千次展示率)超过同业。2016年的时候，EasyBib核心业务超过100万美元，并且没有融资。Neal Taparia 和 Darshan决定将业务卖出给Chegg公司，当时他们仍在Chegg公司，后来他们离开了Chegg公司，开始了下一轮新的创业。   复盘：  1 - 首先有个idea，并能够从最终用户角度考虑功能；   2 - 其次起步要快，快速搭建第一版本；  ","categories": ["startup"],
        "tags": [],
        "url": "/startup/high-school/",
        "teaser": null
      },{
        "title": "快速处理csv",
        "excerpt":"今天看到个文章，是说处理csv的。csv虽说挺方便，可以简单管理关系型数据，不需要买个office365来处理。笔者说处理csv文件是个头痛的问题，链接附上处理csv的代码，但是如果出来的行数足够大，那也是挺恐怖。   图1      使用SmarterCSV。简单对比。   图2      总结  关于SmarterCSV还没得细看，看起来不错，做个记录。联想起之前项目也有生成csv过程，但是直接扔进数据库比较多，而且还是可以迭代处理，感觉不需要单个列 写出来。  ","categories": ["Ruby"],
        "tags": [],
        "url": "/ruby/csv-gem/",
        "teaser": null
      },{
        "title": "如何在网站上增加Google analytics，手把手操作",
        "excerpt":"如何在网站上增加Google的分析，大致说下思路，在Google Analytics上创建你的账号，然后填写相关需要观察网站的信息，顺利验证后会生成一段代码，主要用于Google对网站的访问情况记录，把这段代码放在网站的head标签内即可。下面直接来手把手操作。   需要技能:HTML, CSS, Javascript   步骤一：创建账号  首先去到网站创建账号，创建账号码，需要填写几个tab上的信息    基本信息    你的business信息    网站的话选择web   步骤二：获取代码  成功后填入网站的相关信息，名称以及URL。验证顺利后就会生成一段代码，如图    获取代码   &lt;script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-XXXXXXXXX-X\"&gt;&lt;/script&gt; &lt;script&gt;   window.dataLayer = window.dataLayer || [];   function gtag(){dataLayer.push(arguments);}   gtag('js', new Date());    gtag('config', 'UA-XXXXXXXXX-X'); &lt;/script&gt;   步骤三：加入代码  根据步骤三生成的代码，找到网站的首页head标签加入代码。建议这个头部html写成模版，便于每个页面利用。   把代码复制好后就完成了，完成效果图如图：      最后  非常简单的一个内容，做个记录分享。  ","categories": ["google analytics"],
        "tags": ["website"],
        "url": "/google%20analytics/add-google-analist-to-github/",
        "teaser": null
      },{
        "title": "Sliding Window 系列笔记。找出连续k个数的平均值",
        "excerpt":"问题，给出一个数组，找出所有连续的K个子项平均值。 Array: [2, 4, 2, 6, -3, -5, 8], K = 3 如上数组，求解 第一个平均值 （2 + 4 + 2）/3 =&gt; 2.6 第二个平均值 （4 + 2 + 6）/3 =&gt; 4 第三个平均值 （2 + 6 + （-3））/3 =&gt; 1.6 … 根据以上思路，得出最简单的解法，直接迭代求出 class AverageOfSubarrayOfSizeK{ public static double[] find(int[]arr, int K){ double[] ans =...","categories": ["Algorithm"],
        "tags": ["Sliding Window"],
        "url": "/algorithm/slide-window/",
        "teaser": null
      },{
        "title": "Sliding Window 系列 笔记2",
        "excerpt":"紧接昨日思路，再来个递进，看题目，给出一个非负数组和一个非负数的K,找出数组中最大的连续K子项总和。示例如下， Input: [2, 1, 5, 1, 3, 2], k=3 Output: 9 Explanation: Subarray with maximum sum is [5, 1, 3]. 因为数组的缘故，可以先考虑迭代解决。代码如下 class MaxSumSubArrayOfSizeK { public static int findMaxSumSubArray(int[] arr, int k){ int maxSum = 0, windowSum; for(int i = 0; i&lt;= arr.length -k, i++){ windowSum = 0; for(int j =...","categories": ["Algorithm"],
        "tags": ["Sliding Window"],
        "url": "/algorithm/sliding-window-1/",
        "teaser": null
      },{
        "title": "Sliding Window 系列 笔记3",
        "excerpt":"题目 给出一个非负数组和一个非负数s,找出数组中总和大于或者等于s的最小连续子乡长度。示例如下， 例子1 输入: [2, 1, 5, 2, 3, 2], s=7 输出: 2 解释: 最小的子项大于或者等于7。[5,2]的长度是2。 例子2 输入: [2, 1, 5, 2, 8], s=7 输出: 1 解释: 最小的子项大于或者等于7。[8]的长度是1。 思路 根据之前的Sliding Window 解法，目前需要考虑的是连续子项的个数变化，需要把子项不断相加，直到总和大于或者等于s，那么记录这些子项的个数，同时把第一个子项去除，继续加入新的子项。见代码 class MinSizeSubArraySum { public static int findMinSubArray(int[] arr, int s){ int windowSum = 0, minLength = Integer.MAX_VALUE; int left...","categories": ["Algorithm"],
        "tags": ["Sliding Window"],
        "url": "/algorithm/sliding-window-2/",
        "teaser": null
      },{
        "title": "Sliding Window 系列笔记4 数组中最长唯一子字符长度",
        "excerpt":"题目 给出一个字符串,找出字符串中唯一的，最长的并且子字符个数等于K的长度，示例如下： 例子1 输入: String=\"araaci\", K=2 输出: 4 解释: 最长子字符串长度是4,\"araa\" 例子2 输入: String=\"araaci\", K=1 输出: 2 解释: 最长子字符串长度是2,\"aa\" 思路 依然采用Sliding Window解法，由于需要不停的比对判断是否超过k的个数，所以考虑使用HashMap; 1 - 首先我们逐个加入子字符. 2 - 判断加入的子字符是否超过 K 个数. 3 - 如果超过 K 个数，那么就要移除第一个 子字符 4 - 一直比对，保留最长的个数 参看如下代码 class LongestSubstringKDistinct { public static int findLength(String str, int k){ if...","categories": ["Algorithm"],
        "tags": ["Sliding Window"],
        "url": "/algorithm/sliding-window-longest-substring-with-k-distinct-character/",
        "teaser": null
      }]
